# Script de d√©ploiement automatique pour NOVASHOP
# Ce script doit √™tre ex√©cut√© depuis le dossier du projet

# Fonction pour afficher les messages en couleur
function Write-Color {
    param(
        [Parameter(Mandatory=$true)]
        [string]$Message,
        [string]$Color = "White"
    )
    
    Write-Host $Message -ForegroundColor $Color
}

# V√©rifier si Git est install√©
try {
    $gitVersion = git --version
    Write-Color "‚úì Git est install√© : $gitVersion" -Color Green
} catch {
    Write-Color "‚úó Git n'est pas install√©. Veuillez installer Git avant de continuer." -Color Red
    Write-Color "T√©l√©chargez Git depuis : https://git-scm.com/download/win" -Color Yellow
    exit 1
}

# V√©rifier si on est dans le bon dossier
$requiredFiles = @('index.html', 'manifest.json', 'sw.js', 'netlify.toml')
$missingFiles = $requiredFiles | Where-Object { -not (Test-Path -Path $_) }

if ($missingFiles.Count -gt 0) {
    Write-Color "‚úó Fichiers manquants : $($missingFiles -join ', ')" -Color Red
    Write-Color "Assurez-vous d'ex√©cuter ce script depuis le dossier du projet." -Color Yellow
    exit 1
}

# Demander les informations utilisateur
$userName = Read-Host -Prompt "Entrez votre nom d'utilisateur GitHub"
$userEmail = Read-Host -Prompt "Entrez votre email GitHub"
$repoUrl = "https://github.com/novashop153-web/NOVASHOP.git"

# Configurer Git
Write-Color "`nConfiguration de Git..." -Color Cyan
git config --global user.name $userName
git config --global user.email $userEmail

# Initialiser le d√©p√¥t Git
Write-Color "`nInitialisation du d√©p√¥t Git..." -Color Cyan
if (Test-Path -Path ".git") {
    Write-Color "‚úì D√©p√¥t Git d√©j√† initialis√©" -Color Green
} else {
    git init
    Write-Color "‚úì D√©p√¥t Git initialis√©" -Color Green
}

# Ajouter tous les fichiers
Write-Color "`nAjout des fichiers..." -Color Cyan
git add .
Write-Color "‚úì Fichiers ajout√©s" -Color Green

# Faire un commit
Write-Color "`nCr√©ation du commit..." -Color Cyan
$commitMessage = "D√©ploiement initial de NOVASHOP - $(Get-Date -Format 'dd/MM/yyyy HH:mm')"
git commit -m $commitMessage
Write-Color "‚úì Commit cr√©√© : $commitMessage" -Color Green

# Ajouter le d√©p√¥t distant
Write-Color "`nConfiguration du d√©p√¥t distant..." -Color Cyan
$remoteExists = git remote -v | Select-String -Pattern "origin" -Quiet

if ($remoteExists) {
    git remote set-url origin $repoUrl
    Write-Color "‚úì URL distante mise √† jour" -Color Green
} else {
    git remote add origin $repoUrl
    Write-Color "‚úì D√©p√¥t distant ajout√©" -Color Green
}

# Pousser vers GitHub
Write-Color "`nEnvoi des modifications vers GitHub..." -Color Cyan
try {
    git push -u origin main --force
    Write-Color "‚úì Code pouss√© avec succ√®s vers GitHub!" -Color Green
} catch {
    Write-Color "‚úó Erreur lors du push vers GitHub. Essayez de cr√©er une branche main :" -Color Red
    Write-Host "  git branch -M main" -ForegroundColor Yellow
    Write-Host "  git push -u origin main" -ForegroundColor Yellow
    exit 1
}

# Afficher les instructions finales
Write-Color "`nüéâ D√©ploiement termin√© avec succ√®s!" -Color Green
Write-Color "`nProchaines √©tapes :" -Color Cyan
Write-Color "1. Allez sur https://app.netlify.com/" -Color White
Write-Color "2. Connectez votre compte GitHub" -Color White
Write-Color "3. S√©lectionnez le d√©p√¥t 'novashop153-web/NOVASHOP'" -Color White
Write-Color "4. Cliquez sur 'Deploy site'" -Color White
Write-Color "`nVotre site sera disponible √† l'adresse : https://votre-site.netlify.app" -Color Yellow
